#!/usr/bin/env bash
set -x
# OctoPI generation script
# Helper script that runs in a Raspbian chroot to create the OctoPI distro
# Written by Guy Sheffer <guysoft at gmail dot com>
# GPL V3
fixLd(){
  sed -i 's@/usr/lib/arm-linux-gnueabihf/libcofi_rpi.so@\#/usr/lib/arm-linux-gnueabihf/libcofi_rpi.so@' /etc/ld.so.preload
}

unpackHome(){
  chown -hR pi /filesystem/home
  chgrp -hR pi /filesystem/home
  cp -av /filesystem/home/* /home/pi
  cp -av /filesystem/home/.* /home/pi
}

unpackRoot(){
  cp -av /filesystem/root/* /
}

unpackBoot(){
  cp -av /filesystem/boot/* /boot
}

fixLd
unpackHome
unpackBoot

#set interfaces
cp -v /filesystem/root/configs/interfaces /etc/network/interfaces

apt-get update

apt-get remove -y --purge scratch squeak-plugins-scratch squeak-vm wolfram-engine

#install and set up ethernet dns mask
apt-get -y install dnsmasq
apt-get -y install squid3 iptables imagemagick apache2 perl hostapd bridge-utils

#kill stupid squid3 that is eating cpu
sudo killall squid3

echo net.ipv4.ip_forward=1 >> /etc/sysctl.conf

echo 'DAEMON_CONF="/etc/hostapd/hostapd.conf"' >> /etc/default/hostapd

#set hostapd (make sure its after the apt-get install of hostapd)
#wget http://www.daveconroy.com/wp3/wp-content/uploads/2013/07/hostapd.zip #enable after geekcon
wget http://localhost/raspbian/hostapd.zip
unzip hostapd.zip 
sudo mv /usr/sbin/hostapd /usr/sbin/hostapd.bak
sudo mv hostapd /usr/sbin/hostapd.edimax 
sudo ln -sf /usr/sbin/hostapd.edimax /usr/sbin/hostapd 
sudo chown root.root /usr/sbin/hostapd 
sudo chmod 755 /usr/sbin/hostapd

pushd /home/pi

  #Make sure user pi has access to serial ports
  sudo usermod -a -G tty pi
  sudo usermod -a -G dialout pi
  
  #setup haproxy for http and https, and webcam
  ##export HAPROXY_VERSION=1.5-dev19
  ##sudo apt-get -y install ssl-cert libssl-dev libpcre3-dev checkinstall
  ##rm /etc/ssl/private/ssl-cert-snakeoil.key /etc/ssl/certs/ssl-cert-snakeoil.pem
  ##sudo -u pi wget http://haproxy.1wt.eu/download/1.5/src/devel/haproxy-${HAPROXY_VERSION}.tar.gz
  ##sudo -u pi tar xzvf haproxy-${HAPROXY_VERSION}.tar.gz
  ##rm haproxy-${HAPROXY_VERSION}.tar.gz
  ##sudo -u pi mv `ls | grep haproxy | head -n 1` haproxy-ss
  ##pushd haproxy-ss
  ##  sudo -u pi make TARGET=linux2628 USE_LINUX_SPLICE=1 USE_LINUX_TPROXY=1 USE_PCRE=1 USE_OPENSSL=1
  ##  mkdir -p /usr/local/share/man/man1 /usr/local/doc /usr/local/doc/haproxy
  ##  sudo checkinstall --default --pkgname haproxy --pkgversion 1.5
  ##popd
  ##rm -rf haproxy-ss

  ##adduser --system --disabled-password --disabled-login --home /var/lib/haproxy \
  ##        --no-create-home --quiet --force-badname --group haproxy

sed -i 's@exit 0@@' /etc/rc.local

echo "/home/pi/scripts/genCert" >> /etc/rc.local


### network settings ###
#nat
iptables -t nat -A POSTROUTING -j MASQUERADE >> /etc/rc.local
#squid transparent proxy
iptables -t nat -A PREROUTING -i wlan0 -p tcp -m tcp --dport 80 -j DNAT --to-destination 192.168.254.1:3128 >> /etc/rc.local
iptables -t nat -A PREROUTING -i eth1 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 3128 >> /etc/rc.local

### end network settings
##echo "/usr/local/sbin/haproxy -f /etc/haproxy/haproxy.cfg" >> /etc/rc.local
echo "exit 0" >> /etc/rc.local

### apache settings ###
mkdir /var/www/images
chmod 777 /var/www/images

#end apache settings

###upside down internet settings###
chmod +x /etc/squid3/upsidedown.pl

#reach printer by name
sudo apt-get -y install avahi-daemon
echo abusive-internet > /etc/hostname
sed -i 's@raspberrypi@abusive-internet@' /etc/hosts

#unpack root in the end, so etc file are not overwritten, might need to add two roots int he future
unpackRoot

#cleanup
fixLd
sudo apt-get clean

sed -i 's@\#/usr/lib/arm-linux-gnueabihf/libcofi_rpi.so@/usr/lib/arm-linux-gnueabihf/libcofi_rpi.so@' /etc/ld.so.preload
